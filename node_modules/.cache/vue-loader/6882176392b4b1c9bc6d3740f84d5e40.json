{"remainingRequest":"/home/clement/VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clement/VUE/src/views/Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css&","dependencies":[{"path":"/home/clement/VUE/src/views/Register.vue","mtime":1607593456348},{"path":"/home/clement/VUE/node_modules/css-loader/dist/cjs.js","mtime":1607423900908},{"path":"/home/clement/VUE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1607423902216},{"path":"/home/clement/VUE/node_modules/postcss-loader/src/index.js","mtime":1607423901656},{"path":"/home/clement/VUE/node_modules/cache-loader/dist/cjs.js","mtime":1607423900684},{"path":"/home/clement/VUE/node_modules/vue-loader/lib/index.js","mtime":1607423902216}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZXJyb3ItbWVzc2FnZSB7CiAgICBkaXNwbGF5OiBub25lOwp9Cgojc3VjY2Vzcy1tZXNzYWdlIHsKICAgIGRpc3BsYXk6IG5vbmU7Cn0KCiNtZXNzYWdlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoudmFsaWQgewogIGNvbG9yOiBncmVlbjsKfQoKLnZhbGlkOmJlZm9yZSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGxlZnQ6IC0zNXB4OwogIGNvbnRlbnQ6ICLinJQiOwp9CgovKiBBZGQgYSByZWQgdGV4dCBjb2xvciBhbmQgYW4gIngiIHdoZW4gdGhlIHJlcXVpcmVtZW50cyBhcmUgd3JvbmcgKi8KLmludmFsaWQgewogIGNvbG9yOiByZWQ7Cn0KCi5pbnZhbGlkOmJlZm9yZSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGxlZnQ6IC0zNXB4OwogIGNvbnRlbnQ6ICLinJYiOwp9Cg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkPA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"text.center\">\n        <div class=\"d-flex justify-content-center\" id=\"register-form\">\n            \n            <form  @submit.prevent=\"register\">\n                <br><br><br><br>\n                <div>\n                    <label for=\"name\">\n                        Nom : \n                    </label>\n                    <input type=\"text\" name=\"firstName\" placeholder=\"Prénom\" id=\"firstName\" v-model=\"firstName\">\n                    <input type=\"text\" name=\"lastName\" placeholder=\"Nom\" id=\"lastName\" v-model=\"lastName\">\n                </div>\n                <div>\n                    <label for=\"adress\">\n                        Adresse : \n                    </label>\n                    <input type=\"text\" name=\"adress\" placeholder=\"Adresse\" id=\"adress\" v-model=\"adress\"><br>\n                    <input type=\"text\" name=\"postCode\" placeholder=\"Code postal\" id=\"postCode\" v-model=\"postCode\">\n                    <input type=\"text\" name=\"city\" placeholder=\"Ville\" id=\"city\" v-model=\"city\">\n                </div>\n                <div>\n                    <label for=\"email\">\n                        Email : \n                    </label>\n                    <input type=\"text\" name=\"email\" placeholder=\"email\" id=\"email\" v-model=\"email\">\n                </div>\n                <div>\n                    <label for=\"password\">\n                        Mot de passe : \n                    </label>\n                    <input type=\"password\" \n                        @focus=\"passwordMsg = true\" \n                        @blur=\"passwordMsg = false\"\n                        @keyup=\"checkPassword\"\n                        name=\"password\" placeholder=\"Mot de passe\" id=\"password\" v-model=\"password\">\n                </div>\n                <div>\n                    <label for=\"password\">\n                        Confirmation mot de passe : \n                    </label>\n                    <input type=\"password\" \n                    @focus=\"confirmationMsg = true\" \n                    @blur=\"confirmationMsg = false\" \n                    @keyup=\"checkConfirmation\"\n                     name=\"passwordConfirmation\" placeholder=\"Mot de passe\" id=\"passwordConfirmation\" v-model=\"passwordConfirmation\">\n                </div>\n                <div>\n                    <button class=\"btn btn-dark\" type=\"register\">Register</button>\n                </div>\n            </form>\n            \n        </div>\n        <div v-if=\"passwordMsg\" class=\"col-md-4 text-center\" id=\"message\">\n            <h4> Votre mot de passe doit contenir :</h4>\n            <p id=\"letter\" class=\"invalid\">Une lettre <b>minuscule</b></p>\n            <p id=\"capital\" class=\"invalid\">Une lettre  <b>majuscule</b></p>\n            <p id=\"number\" class=\"invalid\">Un <b>nombre</b></p>\n            <p id=\"length\" class=\"invalid\">Minimum <b>6 caractères</b></p>\n        </div>\n        <div v-if=\"confirmationMsg\" class=\"col-md-4 text-center\" id=\"message\">\n            <p id=\"pwConfirmation\" class=\"invalid\">La confrimation doit correspondre au mot de passe.</p>\n        </div>\n        <div id=\"error-message\">\n            <p>Votre compte n'a pas pu être créé.</p>\n        </div>\n        <div id=\"success-message\">\n            <p>Votre compte a été créé avec succès.</p>\n        </div>\n    </div>\n</template>\n\n<script>\n//import {mapActions} from 'vuex';\nimport axios from 'axios';\n\nexport default {\n  name: 'Register',\n  data() {\n    return {\n        name: '',\n        firstName: '',\n        lastName: '',\n        adress: '',\n        postCode: '',\n        city: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n        lat: '',\n        long: '',\n        passwordMsg: false,\n        confirmationMsg: false\n    }\n  }, \n  methods: {\n      async register() {\n        if (\n        this.emailValidation(this.email) && \n        this.passwordValidation(this.password) && \n        this.passwordConfirm(this.password, this.passwordConfirmation)\n        ) {\n            try {\n                let latLong = await this.getLatLong(); //on récupère la lat et long dans cette variable\n\n                let res = await axios.post('https://haute-loire.org/api/user', {\n                    name: this.firstName + \" \"+ this.lastName,\n                    firstName: this.firstName,\n                    lastName: this.lastName,\n                    email: this.email,\n                    password: this.password,\n                    payroll: 0,\n                    retailer: 0,\n                    latitude: latLong[0], //latitude est le premier élément de la variable latLong\n                    longitude: latLong[1],  //longitude est le second élément de la variable latLong\n                    address: this.adress,\n                    postalCode: this.postCode,\n                    city: this.city\n                })\n\n            console.log(res.data);\n            console.log(\"compte créé avec succès\");\n            this.hideError();\n            this.displaySuccess();\n            this.$router.replace({\n                name: 'Signin'\n            });\n            }\n            catch (e) {\n                console.log(e);\n                this.displayError();\n            }\n        } else {\n            console.log(\"pas ok\")\n            this.displayError();\n        }\n\n      },\n      emailValidation(mail) {\n        //eslint-disable-next-line\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        return reg.test(mail);\n      },\n      passwordValidation(password) {\n          //eslint-disable-next-line\n          let reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/;\n          return reg.test(password);\n      },\n      passwordConfirm(password, passwordConfirmation) {\n          return password == passwordConfirmation;\n\n      },\n      displayError() {\n          var t = document.querySelector(\"#error-message\");\n          t.style.display = 'block';\n      },\n      hideError() {\n          var t = document.querySelector(\"#error-message\");\n          t.style.display = 'none';\n      },\n      displaySuccess() {\n          var ta = document.querySelector(\"#success-message\");\n          ta.style.display = 'block';\n      },\n      async getLatLong() { \n            let url = \"https://nominatim.openstreetmap.org/search.php\";\n            let params = {\n                q: this.adress+\" \"+this.city+\" \"+this.postCode,\n                format: 'json',\n                addressdetails: 1\n            };\n            const res = await axios.get(url, {params: params}); //on stock la réponse dans cette variable\n            console.log(res.data[0].lat);\n            console.log(res.data[0].lon);\n            return [res.data[0].lat, res.data[0].lon]; //on retourne un tableau avec les 2 éléments\n\n        },\n        checkPassword() {\n            var myInput = document.getElementById(\"password\");\n            var letter = document.getElementById(\"letter\");\n            var capital = document.getElementById(\"capital\");\n            var number = document.getElementById(\"number\");\n            var length = document.getElementById(\"length\");\n\n            console.log(this.password);\n            // Validate lowercase letters\n            var lowerCaseLetters = /[a-z]/g;\n            if(myInput.value.match(lowerCaseLetters)) {  \n                letter.classList.remove(\"invalid\");\n                letter.classList.add(\"valid\");\n            } else {\n                letter.classList.remove(\"valid\");\n                letter.classList.add(\"invalid\");\n            }\n            \n            // Validate capital letters\n            var upperCaseLetters = /[A-Z]/g;\n            if(myInput.value.match(upperCaseLetters)) {  \n                capital.classList.remove(\"invalid\");\n                capital.classList.add(\"valid\");\n            } else {\n                capital.classList.remove(\"valid\");\n                capital.classList.add(\"invalid\");\n            }\n\n            // Validate numbers\n            var numbers = /[0-9]/g;\n            if(myInput.value.match(numbers)) {  \n                number.classList.remove(\"invalid\");\n                number.classList.add(\"valid\");\n            } else {\n                number.classList.remove(\"valid\");\n                number.classList.add(\"invalid\");\n            }\n            \n            // Validate length\n            if(myInput.value.length >= 6) {\n                length.classList.remove(\"invalid\");\n                length.classList.add(\"valid\");\n            } else {\n                length.classList.remove(\"valid\");\n                length.classList.add(\"invalid\");\n            }\n                    \n        },\n        checkConfirmation() {\n            var conf = document.getElementById(\"pwConfirmation\");\n            if (this.password == this.passwordConfirmation) {\n                conf.classList.remove(\"invalid\");\n                conf.classList.add(\"valid\");\n            } else {\n                conf.classList.remove(\"valid\");\n                conf.classList.add(\"invalid\");\n            }\n        }\n                \n    }\n\n}\n</script>\n\n<style scoped>\n#error-message {\n    display: none;\n}\n\n#success-message {\n    display: none;\n}\n\n#message {\n    background-color: #f3f3f3;\n    justify-content: center;\n    text-align: center;\n}\n.valid {\n  color: green;\n}\n\n.valid:before {\n  position: relative;\n  left: -35px;\n  content: \"✔\";\n}\n\n/* Add a red text color and an \"x\" when the requirements are wrong */\n.invalid {\n  color: red;\n}\n\n.invalid:before {\n  position: relative;\n  left: -35px;\n  content: \"✖\";\n}\n</style>"]}]}