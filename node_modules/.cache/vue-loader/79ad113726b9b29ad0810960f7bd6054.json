{"remainingRequest":"/home/clement/twp/mvvm_twp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/clement/twp/mvvm_twp/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/clement/twp/mvvm_twp/src/views/Register.vue","mtime":1607084787504},{"path":"/home/clement/twp/mvvm_twp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clement/twp/mvvm_twp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/clement/twp/mvvm_twp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/clement/twp/mvvm_twp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IHttYXBBY3Rpb25zfSBmcm9tICd2dWV4JzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKLy92YXIgYmNyeXB0ID0gcmVxdWlyZSgnYmNyeXB0anMnKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVnaXN0ZXInLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGVtYWlsOiAnJywKICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgcGFzc3dvcmRDb25maXJtYXRpb246ICcnCiAgICB9CiAgfSwgCiAgbWV0aG9kczogewogICAgICBhc3luYyByZWdpc3RlcigpIHsKCiAgICAgICAgaWYgKCkKICAgICAgICAKICAgICAgICBsZXQgcmVzID0gYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS91c2VycycsIHsKICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLAogICAgICAgICAgICBlbWFpbDogdGhpcy5lbWFpbCwKICAgICAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQKICAgICAgICB9KQogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICAKICAgICAgfSwKICAgICAgdmFsaWRhdGVFbWFpbChlbWFpbCkgewogICAgICAgICAgbGV0IHJlZyA9IC9eXHcrKFtcLi1dP1x3KykqQFx3KyhbXC4tXT9cdyspKihcLlx3ezIsM30pKyQvOwogICAgICAgICAgcmV0dXJuIHJlZy5lbWFpbDsKICAgICAgfQogICAgICAKICB9Cgp9Cg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"text.center\">\n        <div class=\"d-flex justify-content-center\" id=\"register-form\">\n            \n            <form  @submit.prevent=\"register\">\n                <br><br><br><br>\n                <div>\n                    <label for=\"email\">\n                        nom\n                    </label>\n                    <input type=\"text\" name=\"name\" id=\"name\" v-model=\"name\">\n                </div>\n                <div>\n                    <label for=\"email\">\n                        Email\n                    </label>\n                    <input type=\"text\" name=\"email\" id=\"email\" v-model=\"email\">\n                </div>\n                <div>\n                    <label for=\"password\">\n                        Mot de passe\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" v-model=\"password\">\n                </div>\n                <div>\n                    <label for=\"password\">\n                        Confirmation mot de passe\n                    </label>\n                    <input type=\"password\" name=\"passwordConfirmation\" id=\"passwordCOnfirmation\" v-model=\"passwordConfirmation\">\n                </div>\n                <div>\n                    <button class=\"btn btn-dark\" type=\"register\">Register</button>\n                </div>\n            </form>\n            \n        </div>\n\n    </div>\n</template>\n\n<script>\n//import {mapActions} from 'vuex';\nimport axios from 'axios';\n//var bcrypt = require('bcryptjs');\n\nexport default {\n  name: 'Register',\n  data() {\n    return {\n        name: '',\n        email: '',\n        password: '',\n        passwordConfirmation: ''\n    }\n  }, \n  methods: {\n      async register() {\n\n        if ()\n        \n        let res = await axios.post('http://localhost:8000/api/users', {\n            name: this.name,\n            email: this.email,\n            password: this.password\n        })\n        console.log(res.data);\n        \n      },\n      validateEmail(email) {\n          let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n          return reg.email;\n      }\n      \n  }\n\n}\n</script>\n\n<style scoped>\n\n\n</style>"]}]}